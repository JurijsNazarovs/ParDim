[+] in ParDim checkArgsList looks redundend and probably has to be deleted
[-] Fill args.listDev
[-] Check what will be if Condor fail to create dag file
[+] Think about providing first stage as condor or local. Delete local launch
[+] Check in "$tabOut" of boostDownload.sh last columns to see if there are some
    repetitve values. If there are, then it means that in the file:
    same folder + same relative file _ origName=false.
[+] rewrite MakeCon.sh file, using more options including cores for makeAquasDag.sh
    Condor accept transFiles using comma only.
[-] make a specific error from BDS if there is a segmentation fault. Then I can
    put constraint on_exit in condor file, so that it is repeated untill there
    is another error.
[+] fix errMsg, so that I can input it even if > /dev/null
[+] If no core labels in the file then just ignore them. That is,
    need to create a special error in readArgs, which returns specific value
    if label not found.
[+] Make a right regexpr for awk to fit like following: DONE FOR PARDIM and funclist
    "        ##[       SCRIPT_NO_SPACES   ]##  "
    That is: a lot of possible spaces before, inside and after, but not
    in the name of the script. https://regex101.com
[+] Change isCoreTask for whichCoreTask=<array of numbers>
[+] Read args in file not all of them, but just those which selected
[+] Give a warning for repeated scripts.
[+] Think if I need to change path for scripts for the whole path. (Changed for
    whole path.)
[-] How better to define local for i
[+] Need to rewrite coreTasks for usual tasks, so that everything can be changed
    just provide default scripts. Since the order is already done.
[+] singleMap vs multimap => different execute files
[+] transfer files
[-] for now all scripts accept just 2 parameters, args file and path
    Delete all stuff from makeAquasDag.sh
[+] Check if exeMap.sh exist. Create map array with key = true/false or single/multi
[-] Finsih single map
[-] Finish boostDownload
    Functions used:ErrMsg, ChkEmptyArgs, EchoLine, ReadArgs, ChkUrl

[-] Make split of funcList. Possible solution:
    ChkEmptyArg + ReadArgs + chkExist + chkAvailabToWrite = something about args
    ErrMsg + WarnMsg + any EchoLine = something about Messages
    ChkUrl = add to download
    
[+] Check that jobsDir is in working directory
[-] Change jobsDir in exeMultiMap.sh for $jobsDir/multiMap/${dagName%.*}
[+] Why download/download in boostDownload using exeSingleMap
[+] If condor then in boost download conOut for their makeCon.sh should be run
    with conOut in jobsDir
[-] Fix boostDownlaod to send all files in exeDownload (maybe no need, if I do not create anything there)

[-] Delete "Since you download data, make sure" (because I set directory now)
[+] jodsDir can be in any directories where we can write, except tmp. Condor
does not work there.
[+] Create better post script
[+] ask about error in makeCondor connected with line 56 in exeDownload.sh
[-] Create specific messages with errors in exe of taskScripts and
    collect them usint postScript
[-] Combine single and multimap in one script with argument map to chose
[-] Despite single or multiMap provide file with all input of previous result
[+] Download has to be the first or single task
[-] extension for input file as an argument in makeAquas.dag
[-] line about 800. conFile provide number of cores of peaks and all other multi
    core scripts
[+] make a relResPath to any of pipeline parts => the next part is running from
    that path
[-?] add postscript to open files after multimap. 
Now mapping scripts accept 3 parameters: taskScript, argsFile, dagFile
exeSingleMap.sh provides 3 parameters: argsFile, dagFile, curJobDir (working directory)

The connection between dataPath and Download is hardcoded
selectJobListPath is empty in case of pipeline = just Download

Download has to be the first or single task

If single task if first no need for dataPath or select job list

exeMap scritps transfer conOut* dagFile and jobsDir

Every Dagmaker has to accept exeFile from argslist
## ========= ParDim.sh ====== ##
input of:
      stages for scripts. In every section first and Last stage. if no last, then use last as first and another way
      
      tree scripts
      download script
      preprocess script

check that integrTask != coreTask, including scripts

how to change mapStages, so that people can provide their stages



#############################
[-]Prep-process (A lot of question here)

[1] Trimming
[2] From bam



# Trimming questions
1) Are we going to use data which is not downloaded, so, if this is in local server.
2) Assume we have another part, which calls dataPreparation. This part should be similar to makeAqausDag.sh. Lets call it makePrepDag.sh.

So, we still use same structure of the pipeline, adding new taskscript as makePrepDag.sh. Thus, for every of of the directory we will have SPLICE specificDir.dag.


######
create specificDir.dag using makePrepDag:

Read trimFiles - verctor of different combinations to trim. like, "chip,ctl;dnase"
Need to create 2 different classes of parents for every group between semicolumns - call such groups between semicolumns as group A.
For every type in group A, we detect right corresponding files using ctlExt, chipExt and etc. We also detect the minimum length of reads using all files in a group.
For every file we create a Parent to trim file. We use 1 condor with 1 executable - exeFilePrep.sh. and generate right argument file.

Thus, for Parent we will have 2 variables: Operation = trim and argsListName (and maybe other condor parameters.)

Thus, the exeFilePrep.sh should accept 2 parameters: method of data preparation and argslist.




#######
[-] Submitting Aquas part

There is a huge problem with submitting aquas part alone withought any part before.
1) Aquas part take too much time to unpack files and pack back to create dag files. About 4 mins for 1 dir. => need to unpack them in allignment part, create some flags and read flags in aquas.

2) If start aquas as a first step, then all these 4 mins for every directory will start to implement on machine. Thus, need to use screen - which is not reliable or poot it in Condor. TO put it in Condor, necessary to provide hello.sh script as a taskScript instead of downloading. Emptu taskDag. Provide file with selected dirs (selectJobsTabPath)

